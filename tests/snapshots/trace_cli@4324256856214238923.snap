---
source: tests/trace_cli.rs
info: "set ergo2024\noptions"
---
downgrade_mut_inside_shared: false -> true
fallback_to_outer: false -> true
inherited_ref_on_ref: "EatOuter" -> "EatInner"
mut_binding_on_inherited: "Keep" -> "Error"
ref_binding_on_inherited: "Error" -> "ResetBindingMode"

-p0 @ &mut (*q).0: &mut T0,  p1 @ &mut (*q).1: &mut T1
------------------------------------------------------ "ConstructorRef"
-[p0, p1] @ q: &mut [T0, T1]

+p0 @ &(*q).0: &T0,  p1 @ &(*q).1: &T1
+---------------------------------------- "ConstructorRef"
+[p0, p1] @ q: &mut [T0, T1], q read-only

+p0 @ &mut (*q).0: &mut T0,  p1 @ &mut (*q).1: &mut T1
+----------------------------------------------------- "ConstructorRef"
+[p0, p1] @ q: &mut [T0, T1], q mutable

-[p0, p1] @ &mut **q: &mut T
---------------------------- "ConstructorMultiRef"
-[p0, p1] @ q: &mut &mut T

+[p0, p1] @ &**q: &T
+-------------------------------------- "ConstructorMultiRef"
+[p0, p1] @ q: &mut &mut T, q read-only

+[p0, p1] @ &mut **q: &mut T
+------------------------------------ "ConstructorMultiRef"
+[p0, p1] @ q: &mut &mut T, q mutable

-p @ *q: T
----------- "Deref(EatOuter)"
-&p @ q: &T

-p @ *q: T
------------------- "Deref(EatOuter)"
-&mut p @ q: &mut T

+p @ *q: T
+-------------------------------- "Deref(EatOuter)"
+&p @ q: &T, q is not a reference

+p @ *&q: T
+--------------------------------- "Deref(EatOuter)"
+&p @ &q: &T, T is not a reference

+p @ *q: T
+---------------------------------------- "Deref(EatOuter)"
+&mut p @ q: &mut T, q is not a reference

+p @ q: T
+--------------------------------------------- "Deref(EatOuter)"
+&mut p @ &mut q: &mut T, T is not a reference

+p @ &*q: &T
+------------ "Deref(EatInner)"
+&p @ &q: &&T

+p @ &*q: &T
+-------------------- "Deref(EatInner)"
+&p @ &mut q: &mut &T

+p @ &*q: &T
+-------------------- "Deref(EatInner)"
+&mut p @ &q: &&mut T

+p @ q: &T
+------------------------ "Deref(EatInner)"
+&mut p @ &mut q: &mut &T

+p @ &*q: &T
+----------------------------------------- "Deref(EatInner)"
+&mut p @ &mut q: &mut &mut T, q read-only

+p @ &mut *q: &mut T
+--------------------------------------- "Deref(EatInner)"
+&mut p @ &mut q: &mut &mut T, q mutable

-p @ *&*q: T
--------------- "DerefMutWithShared(EatOuter)"
-&p @ q: &mut T

+p @ *&*q: T
+------------------------------------ "DerefMutWithShared(EatOuter)"
+&p @ q: &mut T, q is not a reference

+p @ *&q: T
+----------------------------------------- "DerefMutWithShared(EatOuter)"
+&p @ &mut q: &mut T, T is not a reference

+p @ &*&*q: &T
+---------------- "DerefMutWithShared(EatInner)"
+&p @ &q: &&mut T

+p @ &*&*q: &T
+------------------------ "DerefMutWithShared(EatInner)"
+&p @ &mut q: &mut &mut T

+ref x @ q: T
+-------------- "RefBindingResetBindingMode"
+ref x @ &q: &T

+ref x @ q: T
+---------------------- "RefBindingResetBindingMode"
+ref x @ &mut q: &mut T

+ref mut x @ q: T
+------------------ "RefBindingResetBindingMode"
+ref mut x @ &q: &T

+ref mut x @ q: T
+-------------------------- "RefBindingResetBindingMode"
+ref mut x @ &mut q: &mut T

-let mut x: T = q
----------------- "Binding"
-mut x @ q: T

+let mut x: T = q
+---------------------------------- "Binding"
+mut x @ q: T, q is not a reference

match_constructor_through_ref: true
eat_inherited_ref_alone: true
inherited_ref_on_ref: EatInner
fallback_to_outer: true
allow_ref_pat_on_ref_mut: true
simplify_deref_mut: true
downgrade_mut_inside_shared: true
ref_binding_on_inherited: ResetBindingMode
mut_binding_on_inherited: Error
rules_display_style: Plain
