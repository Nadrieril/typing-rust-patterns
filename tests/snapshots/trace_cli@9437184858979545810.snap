---
source: tests/trace_cli.rs
info: "set ergo2024\nset predicate_style BindingMode\nrules"
---
downgrade_mut_inside_shared: false -> true
fallback_to_outer: false -> true
inherited_ref_on_ref: "EatOuter" -> "EatInner"
mut_binding_on_inherited: "Keep" -> "Error"
ref_binding_on_inherited: "Error" -> "ResetBindingMode"

The two rulesets are described by the following sets of rules, with differences highlighted.

 place, m ⊢ p0: T0,  place, m ⊢ p1: T1                                            | place, m ⊢ p0: T0,  place, m ⊢ p1: T1
 ----------------------------------------- "Constructor"                          | ----------------------------------------- "Constructor"
 place, m ⊢ [p0, p1]: [T0, T1]                                                    | place, m ⊢ [p0, p1]: [T0, T1]

 value, ro ⊢ p0: &T0,  value, ro ⊢ p1: &T1                                        | value, ro ⊢ p0: &T0,  value, ro ⊢ p1: &T1
 --------------------------------------------- "ConstructorRef"                   | --------------------------------------------- "ConstructorRef"
 b, m ⊢ [p0, p1]: &[T0, T1]                                                       | b, m ⊢ [p0, p1]: &[T0, T1]

 value, ro ⊢ p0: &mut T0,  value, ro ⊢ p1: &mut T1                                | value, ro ⊢ p0: &T0,  value, ro ⊢ p1: &T1
 ----------------------------------------------------- "ConstructorRef"           | --------------------------------------------- "ConstructorRef(ForceReadOnly)"
 b, ro ⊢ [p0, p1]: &mut [T0, T1]                                                  | b, ro ⊢ [p0, p1]: &mut [T0, T1]

 value, rw ⊢ p0: &mut T0,  value, rw ⊢ p1: &mut T1                                | value, rw ⊢ p0: &mut T0,  value, rw ⊢ p1: &mut T1
 ----------------------------------------------------- "ConstructorRef"           | ----------------------------------------------------- "ConstructorRef"
 b, rw ⊢ [p0, p1]: &mut [T0, T1]                                                  | b, rw ⊢ [p0, p1]: &mut [T0, T1]

 value, ro ⊢ [p0, p1]: &T                                                         | value, ro ⊢ [p0, p1]: &T
 -------------------------- "ConstructorMultiRef"                                 | -------------------------- "ConstructorMultiRef"
 b, m ⊢ [p0, p1]: &&T                                                             | b, m ⊢ [p0, p1]: &&T

 value, ro ⊢ [p0, p1]: &T                                                         | value, ro ⊢ [p0, p1]: &T
 -------------------------- "ConstructorMultiRef"                                 | -------------------------- "ConstructorMultiRef"
 b, m ⊢ [p0, p1]: &&mut T                                                         | b, m ⊢ [p0, p1]: &&mut T

 value, ro ⊢ [p0, p1]: &T                                                         | value, ro ⊢ [p0, p1]: &T
 -------------------------- "ConstructorMultiRef"                                 | -------------------------- "ConstructorMultiRef"
 b, m ⊢ [p0, p1]: &mut &T                                                         | b, m ⊢ [p0, p1]: &mut &T

 value, ro ⊢ [p0, p1]: &mut T                                                     | value, ro ⊢ [p0, p1]: &T
 ------------------------------- "ConstructorMultiRef"                            | ------------------------------- "ConstructorMultiRef(ForceReadOnly)"
 b, ro ⊢ [p0, p1]: &mut &mut T                                                    | b, ro ⊢ [p0, p1]: &mut &mut T

 value, rw ⊢ [p0, p1]: &mut T                                                     | value, rw ⊢ [p0, p1]: &mut T
 ------------------------------- "ConstructorMultiRef"                            | ------------------------------- "ConstructorMultiRef"
 b, rw ⊢ [p0, p1]: &mut &mut T                                                    | b, rw ⊢ [p0, p1]: &mut &mut T

 place, ro ⊢ p: T                                                                 | place, ro ⊢ p: T
 ------------------- "Deref"                                                      | ------------------- "Deref(EatOuter)"
 place, m ⊢ &p: &T                                                                | place, m ⊢ &p: &T

 place, ro ⊢ p: T                                                                 | place, ro ⊢ p: T
 ----------------------------------------- "Deref"                                | ----------------------------------------- "Deref(EatOuter)"
 value, m ⊢ &p: &T, T is not a reference                                          | value, m ⊢ &p: &T, T is not a reference

 place, ro ⊢ p: &T                                                                | value, ro ⊢ p: &T
 -------------------- "Deref"                                                     | -------------------- "Deref(EatInner)"
 value, m ⊢ &p: &&T                                                               | value, m ⊢ &p: &&T

 place, ro ⊢ p: &mut T                                                            | value, ro ⊢ p: &T
 ------------------------ "Deref"                                                 | ------------------------ "DerefMutWithShared(EatInner)"
 value, m ⊢ &p: &&mut T                                                           | value, m ⊢ &p: &&mut T

 place, m ⊢ p: T                                                                  | place, m ⊢ p: T
 --------------------------- "Deref"                                              | --------------------------- "Deref(EatOuter)"
 place, m ⊢ &mut p: &mut T                                                        | place, m ⊢ &mut p: &mut T

 place, m ⊢ p: T                                                                  | place, m ⊢ p: T
 ------------------------------------------------- "Deref"                        | ------------------------------------------------- "Deref(EatOuter)"
 value, m ⊢ &mut p: &mut T, T is not a reference                                  | value, m ⊢ &mut p: &mut T, T is not a reference

 place, m ⊢ p: &T                                                                 | b, m ⊢ p: &T
 ---------------------------- "Deref"                                             | ---------------------------- "Deref(EatInner)"
 value, m ⊢ &mut p: &mut &T                                                       | value, m ⊢ &mut p: &mut &T

 place, ro ⊢ p: &mut T                                                            | value, ro ⊢ p: &T
 --------------------------------- "Deref"                                        | --------------------------------- "Deref(EatInner, ForceReadOnly)"
 value, ro ⊢ &mut p: &mut &mut T                                                  | value, ro ⊢ &mut p: &mut &mut T

 place, rw ⊢ p: &mut T                                                            | value, rw ⊢ p: &mut T
 --------------------------------- "Deref"                                        | --------------------------------- "Deref(EatInner)"
 value, rw ⊢ &mut p: &mut &mut T                                                  | value, rw ⊢ &mut p: &mut &mut T

                                                                                  | value, m ⊢ p: &T
                                                                                  | ---------------------------- "Deref(EatInner)"
                                                                                  | value, m ⊢ &mut p: &&mut T

 place, ro ⊢ p: T                                                                 | place, ro ⊢ p: T
 ----------------------- "DerefMutWithShared"                                     | ----------------------- "DerefMutWithShared(EatOuter)"
 place, m ⊢ &p: &mut T                                                            | place, m ⊢ &p: &mut T

 place, ro ⊢ p: T                                                                 | place, ro ⊢ p: T
 --------------------------------------------- "DerefMutWithShared"               | --------------------------------------------- "DerefMutWithShared(EatOuter)"
 value, m ⊢ &p: &mut T, T is not a reference                                      | value, m ⊢ &p: &mut T, T is not a reference

 place, ro ⊢ p: &T                                                                | value, ro ⊢ p: &T
 ------------------------ "DerefMutWithShared"                                    | ------------------------ "Deref(EatInner, ForceReadOnly)"
 value, m ⊢ &p: &mut &T                                                           | value, m ⊢ &p: &mut &T

 place, ro ⊢ p: &mut T                                                            | value, ro ⊢ p: &T
 ---------------------------- "DerefMutWithShared"                                | ---------------------------- "DerefMutWithShared(EatInner)"
 value, m ⊢ &p: &mut &mut T                                                       | value, m ⊢ &p: &mut &mut T

                                                                                  | b, m ⊢ ref x: T
                                                                                  | ---------------------- "RefBindingResetBindingMode"
                                                                                  | value, m ⊢ ref x: &T

                                                                                  | b, m ⊢ ref x: T
                                                                                  | -------------------------- "RefBindingResetBindingMode"
                                                                                  | value, m ⊢ ref x: &mut T

                                                                                  | b, m ⊢ ref mut x: T
                                                                                  | -------------------------- "RefBindingResetBindingMode"
                                                                                  | value, m ⊢ ref mut x: &T

                                                                                  | b, m ⊢ ref mut x: T
                                                                                  | ------------------------------ "RefBindingResetBindingMode"
                                                                                  | value, m ⊢ ref mut x: &mut T

 value, m ⊢ x: &T                                                                 | value, m ⊢ x: &T
 --------------------- "BindingBorrow"                                            | --------------------- "BindingBorrow"
 place, m ⊢ ref x: T                                                              | place, m ⊢ ref x: T

 value, m ⊢ x: &mut T                                                             | value, m ⊢ x: &mut T
 ------------------------- "BindingBorrow"                                        | ------------------------- "BindingBorrow"
 place, m ⊢ ref mut x: T                                                          | place, m ⊢ ref mut x: T

                                                                                  | 
 ------------- "Binding"                                                          | ------------- "Binding"
 b, m ⊢ x: T                                                                      | b, m ⊢ x: T

                                                                                  | 
 --------------------- "Binding"                                                  | --------------------- "Binding"
 place, m ⊢ mut x: T                                                              | place, m ⊢ mut x: T

                                                                                  |  
 ---------------------- "Binding"                                                 |  
 value, m ⊢ mut x: &T                                                             |  

                                                                                  |  
 -------------------------- "Binding"                                             |  
 value, m ⊢ mut x: &mut T                                                         |  

The current options can be fully described as the following set of rules.
The typing predicate looks like `p @ e: T`, where
- `e` is an expression
- `p` is a pattern;
- `T` is a type.

p0 @ e.0: T0,  p1 @ e.1: T1
--------------------------- "Constructor"
[p0, p1] @ e: [T0, T1]

p0 @ &(*e).0: &T0,  p1 @ &(*e).1: &T1
------------------------------------- "ConstructorRef"
[p0, p1] @ e: &[T0, T1]

p0 @ &mut (*e).0: &mut T0,  p1 @ &mut (*e).1: &mut T1
----------------------------------------------------- "ConstructorRef"
[p0, p1] @ e: &mut [T0, T1], e mutable

p0 @ &(*e).0: &T0,  p1 @ &(*e).1: &T1
---------------------------------------- "ConstructorRef(ForceReadOnly)"
[p0, p1] @ e: &mut [T0, T1], e read-only

[p0, p1] @ &**e: &T
------------------- "ConstructorMultiRef"
[p0, p1] @ e: &&T

[p0, p1] @ &**e: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ e: &&mut T

[p0, p1] @ &**e: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ e: &mut &T

[p0, p1] @ &mut **e: &mut T
------------------------------------ "ConstructorMultiRef"
[p0, p1] @ e: &mut &mut T, e mutable

[p0, p1] @ &**e: &T
-------------------------------------- "ConstructorMultiRef(ForceReadOnly)"
[p0, p1] @ e: &mut &mut T, e read-only

p @ *e: T
---------------------------------- "Deref(EatOuter)"
&p @ e: &T, binding_mode(e) = move

p @ *e: T
------------------------------------------------------- "Deref(EatOuter)"
&p @ e: &T, binding_mode(e) = ref, T is not a reference

p @ *e: T
------------------------------------------ "Deref(EatOuter)"
&mut p @ e: &mut T, binding_mode(e) = move

p @ *e: T
------------------------------------------------------------------- "Deref(EatOuter)"
&mut p @ e: &mut T, binding_mode(e) = ref mut, T is not a reference

p @ &**e: &T
---------------------------------- "Deref(EatInner)"
&p @ e: &&T, binding_mode(e) = ref

p @ &**e: &T
------------------------------------------ "Deref(EatInner)"
&mut p @ e: &&mut T, binding_mode(e) = ref

p @ *e: &T
---------------------------------------------- "Deref(EatInner)"
&mut p @ e: &mut &T, binding_mode(e) = ref mut

p @ &mut **e: &mut T
------------------------------------------------------------- "Deref(EatInner)"
&mut p @ e: &mut &mut T, binding_mode(e) = ref mut, e mutable

p @ &**e: &T
------------------------------------------ "Deref(EatInner, ForceReadOnly)"
&p @ e: &mut &T, binding_mode(e) = ref mut

p @ &**e: &T
--------------------------------------------------------------- "Deref(EatInner, ForceReadOnly)"
&mut p @ e: &mut &mut T, binding_mode(e) = ref mut, e read-only

p @ *&*e: T
-------------------------------------- "DerefMutWithShared(EatOuter)"
&p @ e: &mut T, binding_mode(e) = move

p @ *&*e: T
--------------------------------------------------------------- "DerefMutWithShared(EatOuter)"
&p @ e: &mut T, binding_mode(e) = ref mut, T is not a reference

p @ &*&**e: &T
-------------------------------------- "DerefMutWithShared(EatInner)"
&p @ e: &&mut T, binding_mode(e) = ref

p @ &*&**e: &T
---------------------------------------------- "DerefMutWithShared(EatInner)"
&p @ e: &mut &mut T, binding_mode(e) = ref mut

ref x @ *e: T
------------------------------------ "RefBindingResetBindingMode"
ref x @ e: &T, binding_mode(e) = ref

ref x @ *e: T
-------------------------------------------- "RefBindingResetBindingMode"
ref x @ e: &mut T, binding_mode(e) = ref mut

ref mut x @ *e: T
---------------------------------------- "RefBindingResetBindingMode"
ref mut x @ e: &T, binding_mode(e) = ref

ref mut x @ *e: T
------------------------------------------------ "RefBindingResetBindingMode"
ref mut x @ e: &mut T, binding_mode(e) = ref mut

x @ &e: &T
------------------------------------ "BindingBorrow"
ref x @ e: T, binding_mode(e) = move

x @ &mut e: &mut T
---------------------------------------- "BindingBorrow"
ref mut x @ e: T, binding_mode(e) = move


-------- "Binding"
x @ e: T


------------------------------------ "Binding"
mut x @ e: T, binding_mode(e) = move
