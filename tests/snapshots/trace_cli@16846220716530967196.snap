---
source: tests/trace_cli.rs
info: "set rules_display_style Sequent\nrules\n&[[x]]: &[&mut [x]]"
---
The current options can be fully described as the following set of rules.
The typing predicate looks like `b, m ⊢ p: T`, where
- `b` is `place` or `value` and indicates the place context aka binding mode;
- `m` is `rw` or `ro` and indicates whether we have mutable or read-only access to the original scrutinee;
- `p` is a pattern;
- `T` is a type.

place, m ⊢ p0: T0,  place, m ⊢ p1: T1
----------------------------------------- "Constructor"
place, m ⊢ [p0, p1]: [T0, T1]

value, ro ⊢ p0: &T0,  value, ro ⊢ p1: &T1
--------------------------------------------- "ConstructorRef"
b, m ⊢ [p0, p1]: &[T0, T1]

value, m ⊢ p0: &mut T0,  value, m ⊢ p1: &mut T1
--------------------------------------------------- "ConstructorRef"
b, m ⊢ [p0, p1]: &mut [T0, T1]

value, ro ⊢ [p0, p1]: &T
-------------------------- "ConstructorMultiRef"
b, m ⊢ [p0, p1]: &&T

value, ro ⊢ [p0, p1]: &T
-------------------------- "ConstructorMultiRef"
b, m ⊢ [p0, p1]: &&mut T

value, ro ⊢ [p0, p1]: &T
-------------------------- "ConstructorMultiRef"
b, m ⊢ [p0, p1]: &mut &T

value, m ⊢ [p0, p1]: &mut T
------------------------------ "ConstructorMultiRef"
b, m ⊢ [p0, p1]: &mut &mut T

place, ro ⊢ p: T
------------------ "Deref"
b, m ⊢ &p: &T

place, m ⊢ p: T
----------------------- "Deref"
b, m ⊢ &mut p: &mut T

place, ro ⊢ p: T
------------------- "DerefMutWithShared"
b, m ⊢ &p: &mut T

value, m ⊢ x: &T
--------------------- "BindingBorrow"
place, m ⊢ ref x: T

value, m ⊢ x: &mut T
------------------------- "BindingBorrow"
place, m ⊢ ref mut x: T


------------- "Binding"
b, m ⊢ x: T


----------------- "Binding"
b, m ⊢ mut x: T

place, rw ⊢ &[[x]]: &[&mut [x]]
// Applying rule `Deref`
place, ro ⊢ [[x]]: [&mut [x]]
// Applying rule `Constructor`
place, ro ⊢ [x]: &mut [x]
// Applying rule `ConstructorRef`
value, ro ⊢ x: &mut x
// Applying rule `Binding`
let x: &mut x = &mut (*(*s).0).0

// Final bindings (simplified):
let x: &mut x = &mut (*(*s).0).0; // Borrow-check error: MutBorrowBehindSharedBorrow
