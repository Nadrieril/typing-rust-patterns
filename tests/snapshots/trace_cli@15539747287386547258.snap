---
source: tests/trace_cli.rs
info: "set ergo2024\nset rules_display_style BindingMode\nrules"
---
downgrade_mut_inside_shared: false -> true
fallback_to_outer: false -> true
inherited_ref_on_ref: "EatOuter" -> "EatInner"
mut_binding_on_inherited: "Keep" -> "Error"
ref_binding_on_inherited: "Error" -> "ResetBindingMode"

The two rulesets are described by the following sets of rules, with differences highlighted.

 p0 @ e.0: T0,  p1 @ e.1: T1                                                      | p0 @ e.0: T0,  p1 @ e.1: T1
 --------------------------- "Constructor"                                        | --------------------------- "Constructor"
 [p0, p1] @ e: [T0, T1]                                                           | [p0, p1] @ e: [T0, T1]

 p0 @ &(*e).0: &T0,  p1 @ &(*e).1: &T1                                            | p0 @ &(*e).0: &T0,  p1 @ &(*e).1: &T1
 ------------------------------------- "ConstructorRef"                           | ------------------------------------- "ConstructorRef"
 [p0, p1] @ e: &[T0, T1]                                                          | [p0, p1] @ e: &[T0, T1]

 p0 @ &mut (*e).0: &mut T0,  p1 @ &mut (*e).1: &mut T1                            | p0 @ &(*e).0: &T0,  p1 @ &(*e).1: &T1
 ----------------------------------------------------- "ConstructorRef"           | ---------------------------------------- "ConstructorRef"
 [p0, p1] @ e: &mut [T0, T1], e read-only                                         | [p0, p1] @ e: &mut [T0, T1], e read-only

 p0 @ &mut (*e).0: &mut T0,  p1 @ &mut (*e).1: &mut T1                            | p0 @ &mut (*e).0: &mut T0,  p1 @ &mut (*e).1: &mut T1
 ----------------------------------------------------- "ConstructorRef"           | ----------------------------------------------------- "ConstructorRef"
 [p0, p1] @ e: &mut [T0, T1], e mutable                                           | [p0, p1] @ e: &mut [T0, T1], e mutable

 [p0, p1] @ &**e: &T                                                              | [p0, p1] @ &**e: &T
 ------------------- "ConstructorMultiRef"                                        | ------------------- "ConstructorMultiRef"
 [p0, p1] @ e: &&T                                                                | [p0, p1] @ e: &&T

 [p0, p1] @ &**e: &T                                                              | [p0, p1] @ &**e: &T
 --------------------- "ConstructorMultiRef"                                      | --------------------- "ConstructorMultiRef"
 [p0, p1] @ e: &&mut T                                                            | [p0, p1] @ e: &&mut T

 [p0, p1] @ &**e: &T                                                              | [p0, p1] @ &**e: &T
 --------------------- "ConstructorMultiRef"                                      | --------------------- "ConstructorMultiRef"
 [p0, p1] @ e: &mut &T                                                            | [p0, p1] @ e: &mut &T

 [p0, p1] @ &mut **e: &mut T                                                      | [p0, p1] @ &**e: &T
 -------------------------------------- "ConstructorMultiRef"                     | -------------------------------------- "ConstructorMultiRef"
 [p0, p1] @ e: &mut &mut T, e read-only                                           | [p0, p1] @ e: &mut &mut T, e read-only

 [p0, p1] @ &mut **e: &mut T                                                      | [p0, p1] @ &mut **e: &mut T
 ------------------------------------ "ConstructorMultiRef"                       | ------------------------------------ "ConstructorMultiRef"
 [p0, p1] @ e: &mut &mut T, e mutable                                             | [p0, p1] @ e: &mut &mut T, e mutable

 p @ *e: T                                                                        | p @ *e: T
 -------------------------------- "Deref(EatOuter)"                               | -------------------------------- "Deref(EatOuter)"
 &p @ e: &T, e is not a reference                                                 | &p @ e: &T, e is not a reference

 p @ *&e: T                                                                       | p @ *&e: T
 --------------------------------- "Deref(EatOuter)"                              | --------------------------------- "Deref(EatOuter)"
 &p @ &e: &T, T is not a reference                                                | &p @ &e: &T, T is not a reference

 p @ *&e: &T                                                                      | p @ &*e: &T
 ------------ "Deref(EatOuter)"                                                   | ------------ "Deref(EatInner)"
 &p @ &e: &&T                                                                     | &p @ &e: &&T

 p @ *&e: &mut T                                                                  | p @ &*&*e: &T
 ---------------- "Deref(EatOuter)"                                               | ---------------- "DerefMutWithShared(EatInner)"
 &p @ &e: &&mut T                                                                 | &p @ &e: &&mut T

 p @ *e: T                                                                        | p @ *e: T
 ---------------------------------------- "Deref(EatOuter)"                       | ---------------------------------------- "Deref(EatOuter)"
 &mut p @ e: &mut T, e is not a reference                                         | &mut p @ e: &mut T, e is not a reference

 p @ *&mut e: T                                                                   | p @ e: T
 --------------------------------------------- "Deref(EatOuter)"                  | --------------------------------------------- "Deref(EatOuter)"
 &mut p @ &mut e: &mut T, T is not a reference                                    | &mut p @ &mut e: &mut T, T is not a reference

 p @ *&mut e: &T                                                                  | p @ e: &T
 ------------------------ "Deref(EatOuter)"                                       | ------------------------ "Deref(EatInner)"
 &mut p @ &mut e: &mut &T                                                         | &mut p @ &mut e: &mut &T

 p @ *&mut e: &mut T                                                              | p @ &*e: &T
 ----------------------------------------- "Deref(EatOuter)"                      | ----------------------------------------- "Deref(EatInner)"
 &mut p @ &mut e: &mut &mut T, e read-only                                        | &mut p @ &mut e: &mut &mut T, e read-only

 p @ *&mut e: &mut T                                                              | p @ &mut *e: &mut T
 --------------------------------------- "Deref(EatOuter)"                        | --------------------------------------- "Deref(EatInner)"
 &mut p @ &mut e: &mut &mut T, e mutable                                          | &mut p @ &mut e: &mut &mut T, e mutable

                                                                                  | p @ &*e: &T
                                                                                  | -------------------- "Deref(EatInner)"
                                                                                  | &mut p @ &e: &&mut T

 p @ *&*e: T                                                                      | p @ *&*e: T
 ------------------------------------ "DerefMutWithShared(EatOuter)"              | ------------------------------------ "DerefMutWithShared(EatOuter)"
 &p @ e: &mut T, e is not a reference                                             | &p @ e: &mut T, e is not a reference

 p @ *&*&mut e: T                                                                 | p @ *&e: T
 ----------------------------------------- "DerefMutWithShared(EatOuter)"         | ----------------------------------------- "DerefMutWithShared(EatOuter)"
 &p @ &mut e: &mut T, T is not a reference                                        | &p @ &mut e: &mut T, T is not a reference

 p @ *&*&mut e: &T                                                                | p @ &*e: &T
 -------------------- "DerefMutWithShared(EatOuter)"                              | -------------------- "Deref(EatInner)"
 &p @ &mut e: &mut &T                                                             | &p @ &mut e: &mut &T

 p @ *&*&mut e: &mut T                                                            | p @ &*&*e: &T
 ------------------------ "DerefMutWithShared(EatOuter)"                          | ------------------------ "DerefMutWithShared(EatInner)"
 &p @ &mut e: &mut &mut T                                                         | &p @ &mut e: &mut &mut T

                                                                                  | ref x @ e: T
                                                                                  | -------------- "RefBindingResetBindingMode"
                                                                                  | ref x @ &e: &T

                                                                                  | ref x @ e: T
                                                                                  | ---------------------- "RefBindingResetBindingMode"
                                                                                  | ref x @ &mut e: &mut T

                                                                                  | ref mut x @ e: T
                                                                                  | ------------------ "RefBindingResetBindingMode"
                                                                                  | ref mut x @ &e: &T

                                                                                  | ref mut x @ e: T
                                                                                  | -------------------------- "RefBindingResetBindingMode"
                                                                                  | ref mut x @ &mut e: &mut T

 x @ &e: &T                                                                       | x @ &e: &T
 ---------------------------------- "BindingBorrow"                               | ---------------------------------- "BindingBorrow"
 ref x @ e: T, e is not a reference                                               | ref x @ e: T, e is not a reference

 x @ &mut e: &mut T                                                               | x @ &mut e: &mut T
 -------------------------------------- "BindingBorrow"                           | -------------------------------------- "BindingBorrow"
 ref mut x @ e: T, e is not a reference                                           | ref mut x @ e: T, e is not a reference

                                                                                  | 
 -------- "Binding"                                                               | -------- "Binding"
 x @ e: T                                                                         | x @ e: T

                                                                                  | 
 ---------------------------------- "Binding"                                     | ---------------------------------- "Binding"
 mut x @ e: T, e is not a reference                                               | mut x @ e: T, e is not a reference

                                                                                  |  
 -------------- "Binding"                                                         |  
 mut x @ &e: &T                                                                   |  

                                                                                  |  
 ---------------------- "Binding"                                                 |  
 mut x @ &mut e: &mut T                                                           |  

The current options can be fully described as the following set of rules.
The typing predicate looks like `p @ e: T`, where
- `e` is an expression
- `p` is a pattern;
- `T` is a type.

p0 @ e.0: T0,  p1 @ e.1: T1
--------------------------- "Constructor"
[p0, p1] @ e: [T0, T1]

p0 @ &(*e).0: &T0,  p1 @ &(*e).1: &T1
------------------------------------- "ConstructorRef"
[p0, p1] @ e: &[T0, T1]

p0 @ &(*e).0: &T0,  p1 @ &(*e).1: &T1
---------------------------------------- "ConstructorRef"
[p0, p1] @ e: &mut [T0, T1], e read-only

p0 @ &mut (*e).0: &mut T0,  p1 @ &mut (*e).1: &mut T1
----------------------------------------------------- "ConstructorRef"
[p0, p1] @ e: &mut [T0, T1], e mutable

[p0, p1] @ &**e: &T
------------------- "ConstructorMultiRef"
[p0, p1] @ e: &&T

[p0, p1] @ &**e: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ e: &&mut T

[p0, p1] @ &**e: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ e: &mut &T

[p0, p1] @ &**e: &T
-------------------------------------- "ConstructorMultiRef"
[p0, p1] @ e: &mut &mut T, e read-only

[p0, p1] @ &mut **e: &mut T
------------------------------------ "ConstructorMultiRef"
[p0, p1] @ e: &mut &mut T, e mutable

p @ *e: T
---------------------------------- "Deref(EatOuter)"
&p @ e: &T, binding_mode(e) = move

p @ *e: T
------------------------------------------------------- "Deref(EatOuter)"
&p @ e: &T, binding_mode(e) = ref, T is not a reference

p @ *e: T
------------------------------------------ "Deref(EatOuter)"
&mut p @ e: &mut T, binding_mode(e) = move

p @ *e: T
------------------------------------------------------------------- "Deref(EatOuter)"
&mut p @ e: &mut T, binding_mode(e) = ref mut, T is not a reference

p @ &**e: &T
---------------------------------- "Deref(EatInner)"
&p @ e: &&T, binding_mode(e) = ref

p @ &**e: &T
------------------------------------------ "Deref(EatInner)"
&p @ e: &mut &T, binding_mode(e) = ref mut

p @ &**e: &T
------------------------------------------ "Deref(EatInner)"
&mut p @ e: &&mut T, binding_mode(e) = ref

p @ *e: &T
---------------------------------------------- "Deref(EatInner)"
&mut p @ e: &mut &T, binding_mode(e) = ref mut

p @ &**e: &T
--------------------------------------------------------------- "Deref(EatInner)"
&mut p @ e: &mut &mut T, binding_mode(e) = ref mut, e read-only

p @ &mut **e: &mut T
------------------------------------------------------------- "Deref(EatInner)"
&mut p @ e: &mut &mut T, binding_mode(e) = ref mut, e mutable

p @ *&*e: T
-------------------------------------- "DerefMutWithShared(EatOuter)"
&p @ e: &mut T, binding_mode(e) = move

p @ *&*e: T
--------------------------------------------------------------- "DerefMutWithShared(EatOuter)"
&p @ e: &mut T, binding_mode(e) = ref mut, T is not a reference

p @ &*&**e: &T
-------------------------------------- "DerefMutWithShared(EatInner)"
&p @ e: &&mut T, binding_mode(e) = ref

p @ &*&**e: &T
---------------------------------------------- "DerefMutWithShared(EatInner)"
&p @ e: &mut &mut T, binding_mode(e) = ref mut

ref x @ *e: T
------------------------------------ "RefBindingResetBindingMode"
ref x @ e: &T, binding_mode(e) = ref

ref x @ *e: T
-------------------------------------------- "RefBindingResetBindingMode"
ref x @ e: &mut T, binding_mode(e) = ref mut

ref mut x @ *e: T
---------------------------------------- "RefBindingResetBindingMode"
ref mut x @ e: &T, binding_mode(e) = ref

ref mut x @ *e: T
------------------------------------------------ "RefBindingResetBindingMode"
ref mut x @ e: &mut T, binding_mode(e) = ref mut

x @ &e: &T
------------------------------------ "BindingBorrow"
ref x @ e: T, binding_mode(e) = move

x @ &mut e: &mut T
---------------------------------------- "BindingBorrow"
ref mut x @ e: T, binding_mode(e) = move


-------- "Binding"
x @ e: T


------------------------------------ "Binding"
mut x @ e: T, binding_mode(e) = move
