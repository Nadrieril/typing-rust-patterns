---
source: tests/trace_cli.rs
info: "save;set downgrade_mut_inside_shared true;swap;&[x]: &&mut [T]"
---
Current ruleset was saved
The two rulesets are described by the following sets of rules, with differences highlighted.
The old ruleset is on the left, and the new one on the right.

 inh, ro ⊢ p0: &mut T0,  inh, ro ⊢ p1: &mut T1                                    | inh, ro ⊢ p0: &T0,  inh, ro ⊢ p1: &T1
 --------------------------------------------- "ConstructorRef"                   | ------------------------------------- "ConstructorRef(ForceReadOnly)"
 r, ro ⊢ [p0, p1]: &mut [T0, T1]                                                  | r, ro ⊢ [p0, p1]: &mut [T0, T1]

 inh, ro ⊢ [p0, p1]: &mut T                                                       | inh, ro ⊢ [p0, p1]: &T
 ----------------------------- "ConstructorMultiRef"                              | ----------------------------- "ConstructorMultiRef(ForceReadOnly)"
 r, ro ⊢ [p0, p1]: &mut &mut T                                                    | r, ro ⊢ [p0, p1]: &mut &mut T


allow_ref_pat_on_ref_mut: true
downgrade_mut_inside_shared: false -> true
eat_inherited_ref_alone: true
eat_mut_inside_shared: true
fallback_to_outer: "No"
inherited_ref_on_ref: "EatOuter"
match_constructor_through_ref: true
mut_binding_on_inherited: "Keep"
ref_binding_on_inherited: "Error"
simplify_deref_mut: true
Current and saved rulesets were swapped
The two rulesets are described by the following sets of rules, with differences highlighted.
The old current ruleset is on the left, and the new current one on the right.

 inh, ro ⊢ p0: &T0,  inh, ro ⊢ p1: &T1                                            | inh, ro ⊢ p0: &mut T0,  inh, ro ⊢ p1: &mut T1
 ------------------------------------- "ConstructorRef(ForceReadOnly)"            | --------------------------------------------- "ConstructorRef"
 r, ro ⊢ [p0, p1]: &mut [T0, T1]                                                  | r, ro ⊢ [p0, p1]: &mut [T0, T1]

 inh, ro ⊢ [p0, p1]: &T                                                           | inh, ro ⊢ [p0, p1]: &mut T
 ----------------------------- "ConstructorMultiRef(ForceReadOnly)"               | ----------------------------- "ConstructorMultiRef"
 r, ro ⊢ [p0, p1]: &mut &mut T                                                    | r, ro ⊢ [p0, p1]: &mut &mut T


allow_ref_pat_on_ref_mut: true
downgrade_mut_inside_shared: true -> false
eat_inherited_ref_alone: true
eat_mut_inside_shared: true
fallback_to_outer: "No"
inherited_ref_on_ref: "EatOuter"
match_constructor_through_ref: true
mut_binding_on_inherited: "Keep"
ref_binding_on_inherited: "Error"
simplify_deref_mut: true
Comparing against the saved ruleset. Use `unsave` to forget the saved ruleset.
The current ruleset is on the left, and the saved one on the right.
 real, rw ⊢ &[x]: &&mut [T]                                                       | real, rw ⊢ &[x]: &&mut [T]
 // Applying rule `Deref`                                                         | // Applying rule `Deref`
 real, ro ⊢ [x]: &mut [T]                                                         | real, ro ⊢ [x]: &mut [T]
 // Applying rule `ConstructorRef`                                                | // Applying rule `ConstructorRef(ForceReadOnly)`
 inh, ro ⊢ x: &mut T                                                              | inh, ro ⊢ x: &T
 // Applying rule `Binding`                                                       | // Applying rule `Binding`
 let x: &mut T = &mut (**s).0                                                     | let x: &T = &(**s).0
                                                                                  |
 // Final bindings (simplified):                                                  | // Final bindings (simplified):
 let x: &mut T = &mut (**s).0; // Borrow-check error: MutBorrowBehindSharedBorrow | let x: &T = &(**s).0;
