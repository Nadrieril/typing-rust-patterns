---
source: tests/compute_rules.rs
info: ergo2024
---
p0 @ q.0: T0, p1 @ q.1: T1
-------------------------- "Constructor"
[p0, p1] @ q: [T0, T1]

p0 @ &(*q).0: &T0, p1 @ &(*q).1: &T1
------------------------------------ "ConstructorRef"
[p0, p1] @ q: &[T0, T1]

p0 @ &mut (*q).0: &mut T0, p1 @ &mut (*q).1: &mut T1
---------------------------------------------------- "ConstructorRef"
[p0, p1] @ q: &mut [T0, T1]

[p0, p1] @ *q: &T
----------------- "ConstructorMultiRef"
[p0, p1] @ q: &&T

[p0, p1] @ &**q: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ q: &&mut T

[p0, p1] @ *q: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ q: &mut &T

[p0, p1] @ &mut **q: &mut T
--------------------------- "ConstructorMultiRef"
[p0, p1] @ q: &mut &mut T

p @ *q: T
-------------------------------- "Deref(EatOuter)"
&p @ q: &T, q is not a reference

p @ *&q: [T0, T1]
------------------ "Deref(EatOuter)"
&p @ &q: &[T0, T1]

p @ *q: T
---------------------------------------- "Deref(EatOuter)"
&mut p @ q: &mut T, q is not a reference

p @ *&mut q: [T0, T1]
------------------------------ "Deref(EatOuter)"
&mut p @ &mut q: &mut [T0, T1]

p @ &*q: &T
------------ "Deref(EatInner)"
&p @ &q: &&T

p @ &*q: &T
-------------------- "Deref(EatInner)"
&p @ &mut q: &mut &T

p @ &*q: &T
-------------------- "Deref(EatInner)"
&mut p @ &q: &&mut T

p @ &mut *q: &mut T
---------------------------- "Deref(EatInner)"
&mut p @ &mut q: &mut &mut T

&p @ &*q: &T
------------------------------------ "DerefMutWithShared(EatOuter)"
&p @ q: &mut T, q is not a reference

&p @ &q: &[T0, T1]
-------------------------- "DerefMutWithShared(EatOuter)"
&p @ &mut q: &mut [T0, T1]

&p @ &&*q: &&T
---------------- "DerefMutWithShared(EatInner)"
&p @ &q: &&mut T

&p @ &&*q: &&T
------------------------ "DerefMutWithShared(EatInner)"
&p @ &mut q: &mut &mut T

x @ &q: &T
-------------- "BindingOverrideBorrow"
ref x @ &q: &T

x @ &q: &T
---------------------- "BindingOverrideBorrow"
ref x @ &mut q: &mut T

x @ &mut q: &mut T
------------------ "BindingOverrideBorrow"
ref mut x @ &q: &T

x @ &mut q: &mut T
-------------------------- "BindingOverrideBorrow"
ref mut x @ &mut q: &mut T

x @ &q: &T
---------------------------------- "BindingBorrow"
ref x @ q: T, q is not a reference

x @ &mut q: &mut T
-------------------------------------- "BindingBorrow"
ref mut x @ q: T, q is not a reference

let x: T = q
------------ "Binding"
x @ q: T

let mut x: T = q
---------------------------------- "Binding"
mut x @ q: T, q is not a reference

p @ p: T
-------------- "ExprSimplification"
p @ *&mut p: T
