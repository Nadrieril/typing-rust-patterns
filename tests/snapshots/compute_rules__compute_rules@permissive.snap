---
source: tests/compute_rules.rs
info: permissive
---
p0 @ q.0: T0, p1 @ q.1: T1
-------------------------- "Constructor"
[p0, p1] @ q: [T0, T1]

p0 @ &(*q).0: &T0, p1 @ &(*q).1: &T1
------------------------------------ "ConstructorRef"
[p0, p1] @ q: &[T0, T1]

p0 @ &mut (*q).0: &mut T0, p1 @ &mut (*q).1: &mut T1
---------------------------------------------------- "ConstructorRef"
[p0, p1] @ q: &mut [T0, T1]

[p0, p1] @ *q: &T
----------------- "ConstructorMultiRef"
[p0, p1] @ q: &&T

[p0, p1] @ &**q: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ q: &&mut T

[p0, p1] @ *q: &T
--------------------- "ConstructorMultiRef"
[p0, p1] @ q: &mut &T

[p0, p1] @ &mut **q: &mut T
--------------------------- "ConstructorMultiRef"
[p0, p1] @ q: &mut &mut T

p @ *q: T
---------- "Deref(EatOuter)"
&p @ q: &T

p @ *q: T
------------------ "Deref(EatOuter)"
&mut p @ q: &mut T

&p @ &*q: &T
-------------------------------------- "DerefMutWithShared(EatOuter)"
&p @ q: &mut T, binding_mode(q) = move

&p @ q: &T
----------------------------------------- "DerefMutWithShared(EatOuter)"
&p @ q: &mut T, binding_mode(q) = ref mut

x @ &q: &T
------------ "BindingBorrow"
ref x @ q: T

x @ &mut q: &mut T
------------------ "BindingBorrow"
ref mut x @ q: T

let x: T = q
------------ "Binding"
x @ q: T

let mut x: T = q
---------------- "Binding"
mut x @ q: T

p @ p: T
-------------- "ExprSimplification"
p @ *&mut p: T
