---
source: src/analyses/compute_rules.rs
info:
  bundle_name: stateless
  options:
    match_constructor_through_ref: true
    eat_inherited_ref_alone: true
    inherited_ref_on_ref: EatOuter
    fallback_to_outer: "No"
    allow_ref_pat_on_ref_mut: true
    simplify_deref_mut: true
    downgrade_mut_inside_shared: false
    eat_mut_inside_shared: true
    ref_binding_on_inherited: AllocTemporary
    mut_binding_on_inherited: Keep
---
let p0: T0 = e.0,  let p1: T1 = e.1
----------------------------------- "Constructor"
let [p0, p1]: [T0, T1] = e

let p0: &T0 = &(*e).0,  let p1: &T1 = &(*e).1
--------------------------------------------- "ConstructorRef"
let [p0, p1]: &[T0, T1] = e

let p0: &mut T0 = &mut (*e).0,  let p1: &mut T1 = &mut (*e).1
------------------------------------------------------------- "ConstructorRef"
let [p0, p1]: &mut [T0, T1] = e

let [p0, p1]: &T = &**e
----------------------- "ConstructorMultiRef"
let [p0, p1]: &&T = e

let [p0, p1]: &T = &**e
------------------------- "ConstructorMultiRef"
let [p0, p1]: &&mut T = e

let [p0, p1]: &T = &**e
------------------------- "ConstructorMultiRef"
let [p0, p1]: &mut &T = e

let [p0, p1]: &mut T = &mut **e
------------------------------- "ConstructorMultiRef"
let [p0, p1]: &mut &mut T = e

let p: T = *e
-------------- "Deref"
let &p: &T = e

let p: T = *e
---------------------- "Deref"
let &mut p: &mut T = e

let p: T = *&*e
------------------ "DerefMutWithShared"
let &p: &mut T = e

let x: &T = &e
---------------- "BindingBorrow"
let ref x: T = e

let x: &mut T = &mut e
---------------------- "BindingBorrow"
let ref mut x: T = e


------------ "Binding"
let x: T = e


---------------- "Binding"
let mut x: T = e
